@import url('https://fonts.googleapis.com/css2?family=Sora:wght@300;400;500;600;700&family=Manrope:wght@300;400;500;600;700&family=Inter:wght@400;500;600&display=swap');

@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 20 33% 98%;
    --foreground: 20 10% 15%;
    --card: 0 0% 100%;
    --card-foreground: 20 10% 15%;
    --popover: 0 0% 100%;
    --popover-foreground: 20 10% 15%;
    --primary: 12 100% 68%;
    --primary-foreground: 0 0% 100%;
    --secondary: 12 20% 96%;
    --secondary-foreground: 12 50% 20%;
    --muted: 12 20% 96%;
    --muted-foreground: 12 20% 40%;
    --accent: 12 30% 92%;
    --accent-foreground: 12 50% 20%;
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 98%;
    --border: 20 5% 90%;
    --input: 20 5% 90%;
    --ring: 12 100% 68%;
    --radius: 1.2rem;
  }

  .dark {
    --background: 20 15% 10%;
    --foreground: 20 5% 90%;
    --card: 20 15% 12%;
    --card-foreground: 20 5% 90%;
    --popover: 20 15% 12%;
    --popover-foreground: 20 5% 90%;
    --primary: 12 100% 68%;
    --primary-foreground: 0 0% 100%;
    --secondary: 12 20% 18%;
    --secondary-foreground: 12 5% 90%;
    --muted: 12 20% 18%;
    --muted-foreground: 12 20% 65%;
    --accent: 12 30% 25%;
    --accent-foreground: 12 5% 90%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 0 0% 98%;
    --border: 12 20% 20%;
    --input: 12 20% 20%;
    --ring: 12 100% 68%;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply font-sans antialiased bg-background text-foreground;
  }

  h1, h2, h3, h4, h5, h6 {
    @apply font-display font-bold tracking-tight;
  }
}

/* Custom animations */
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideIn {
  from {
    transform: translateX(-20px);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

@keyframes scaleIn {
  from {
    transform: scale(0.95);
    opacity: 0;
  }
  to {
    transform: scale(1);
    opacity: 1;
  }
}

@keyframes pulseGlow {
  0% {
    box-shadow: 0 0 0 0 rgba(var(--primary), 0.4);
  }
  70% {
    box-shadow: 0 0 0 10px rgba(var(--primary), 0);
  }
  100% {
    box-shadow: 0 0 0 0 rgba(var(--primary), 0);
  }
}

/* Animation classes */
.animate-fade-in {
  animation: fadeIn 0.5s ease-out;
}

.animate-slide-in {
  animation: slideIn 0.5s ease-out;
}

.animate-scale-in {
  animation: scaleIn 0.3s ease-out;
}

.animate-pulse-glow {
  animation: pulseGlow 2s infinite;
}

/* Glass effect utilities */
.glass-effect {
  background-color: rgba(255, 255, 255, 0.08);
  backdrop-filter: blur(12px);
  border: 1px solid rgba(255, 255, 255, 0.05);
}

.glass-card {
  background-color: rgba(255, 255, 255, 0.05);
  backdrop-filter: blur(16px);
  border: 1px solid rgba(255, 255, 255, 0.1);
  box-shadow: 
    0 4px 6px -1px rgba(0, 0, 0, 0.05), 
    0 2px 4px -1px rgba(0, 0, 0, 0.03),
    inset 0 0 0 1px rgba(255, 255, 255, 0.05);
}

/* Custom transitions */
.transition-custom {
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 300ms;
}

.hover-lift {
  transition: 
    transform 300ms cubic-bezier(0.4, 0, 0.2, 1),
    box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1),
    background-color 300ms cubic-bezier(0.4, 0, 0.2, 1);
}

.hover-lift:hover {
  transform: translateY(-2px);
  box-shadow: 
    0 10px 15px -3px rgba(0, 0, 0, 0.05), 
    0 4px 6px -2px rgba(0, 0, 0, 0.03);
  background-color: rgba(var(--primary), 0.08);
}

/* Nav specific styles */
.nav-item {
  position: relative;
  transition: all 300ms cubic-bezier(0.4, 0, 0.2, 1);
}

.nav-item::before {
  content: '';
  position: absolute;
  left: 0;
  right: 0;
  bottom: 0;
  height: 2px;
  background-color: hsl(var(--primary));
  transform: scaleX(0);
  transition: transform 300ms cubic-bezier(0.4, 0, 0.2, 1);
}

.nav-item:hover::before {
  transform: scaleX(1);
}

.nav-item.active {
  background-color: rgba(var(--primary), 0.08);
}

.nav-item.active::before {
  transform: scaleX(1);
}